/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "behaviors/behavior_esc_layer_switch.dtsi"

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L  |  U  |  Y  |  ;  | BSPC |
// |  TAB |  A  |  R  |  S  |  T  |  D  |   |  H  |  N  |  E  |  I  |  O  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M  |  ,  |  .  |  /  | ESC  |
//                    | LALT| LWR |LSHFT|   | SPC | RSE  | ENT |
                        bindings = <
   &lt 4 ESC &kp Q &kp W &kp F &kp P &kp G   &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp BSPC
   &kp TAB   &kp A &kp R &kp S &kp T &kp D   &kp H &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp K &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &to_rus LALT 0 &mo 2 &kp SPACE   &kp LSHFT &mo 3 &kp RET
                        >;
                };

                russian_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  | T ` |   |  Y  |  U  | I O |  P  |  [  | BSPC |
// |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  | M ] |  ,  |  .  |  /  | ESC  |
//                    | LALT| LWR |LSHFT|   | SPC | RSE  | ENT |
                        bindings = <
   &lt 4 ESC    &kp Q &kp W &kp E &kp R &hold &kp GRAVE &kp T   &kp Y   &kp U        &hold &kp O &kp I      &kp P   &kp LBKT &kp BSPC
   &kp TAB      &kp A &kp S &kp D &kp F &kp G           &kp H   &kp J        &kp K          &kp L   &kp SEMI &kp SQT
   &kp LCTRL    &kp Z &kp X &kp C &kp V &kp B           &kp N   &hold &kp RBKT &kp M &kp COMMA      &kp DOT &kp FSLH &kp ESC
                 &to_eng LALT 0 &mo 2 &kp SPACE                  &kp LSHFT &mo 3      &kp RET
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC  | PSCR |  DEL  |  UP  | BSPC | PGUP |   | KP* | KP7 | KP8 | KP9 | KP/ | BSPC |
// |  TAB  | HOME | LEFT  | DOWN | RGHT | END  |   | KP+ | KP4 | KP5 | KP6 | KP- |      |
// | CTRL  |      | VOL-  | MUTE | VOL+ | PGDN |   | KP0 | KP1 | KP2 | KP3 | KP. |      |
//                     | LALT |      | LSHFT|   | SPC |     | ENT |
                        bindings = <
   &kp ESC     &kp PSCRN   &kp DEL     &kp UP      &kp BSPC    &kp PGUP        &kp KP_MULTIPLY   &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_DIVIDE  &kp BSPC
   &kp TAB     &kp HOME    &kp LEFT    &kp DOWN    &kp RIGHT   &kp END         &kp KP_PLUS     &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_MINUS &trans
   &kp LCTRL   &trans      &kp K_VOLUME_DOWN &kp K_MUTE    &kp K_VOLUME_UP  &kp PGDN        &kp KP_N0       &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_DOT   &trans
                                                &kp LALT    &trans      &kp SPACE               &kp LSHFT       &trans      &kp KP_ENTER
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// |  TAB |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | CTRL |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | LALT|     |LSHFT|   | SPC |     | ENT |
                        bindings = <
   &kp  ESC  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp  TAB  &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LALT &trans   &kp SPACE   &kp LSHFT   &trans    &kp RET
                        >;
                };

                f_layer {
// -----------------------------------------------------------------------------------------
// |   |    |    |    |    |    |   |  F12  |  F7  | F8  |  F9  |    |  |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | F11 | F4 |  F5 | F6 |     |      |
// |  |     |     |     |     |     |   |   F10  |   F1  |   F2  |  F3   |     |      |
//                    | |     |  |   |  |     |  |
                        bindings = <
   &trans      &trans   &trans   &trans   &trans   &trans      &kp F12   &kp F7   &kp F8   &kp F9   &trans   &trans
   &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp F11   &kp F4   &kp F5   &kp F6   &trans   &trans
   &trans      &trans   &trans   &trans   &trans   &trans      &kp F10   &kp F1   &kp F2   &kp F3   &trans   &trans
                                                &trans      &trans      &trans               &trans       &trans      &trans
                        >;
                };
        };
};